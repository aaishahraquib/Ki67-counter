function [count thresh] = Ki67_counter(image,thresh)
%Counts Ki-67 cells in an image. Optimal threshold may need to be adjusted
%for different equipment. Correction factors (at the bottom of the first script)
%may also need to be adjusted for different equipment, different
%magnificatios, etc. 
% Optimal threshold appears to be somewhere between 0.55 and 0.6 - for our
%primary analysis, we used 0.56.

img1=imread(image);  %read image

img2 = createMask(img1);  %convert RGB image to HSV and binarize
B = bwboundaries(img2);   %detect boundaries to identify Ki67 cells

img2=rgb2gray(img1);  %convert RGB image to grayscale
img2 = imbinarize(img2,'adaptive','ForegroundPolarity','dark','Sensitivity',thresh); %binarize
B2 = bwboundaries(img2); %detect boundaries to identify background cells

%count the number of Ki67 positive cells
count1 = size(B,1);
for i=1:count1
    tmp1(i) = size(B{i},1);
end

%count total cells
s = size(B2,1);
for i=1:s
    tmp2(i) = size(B2{i},1);
end

%discard clusters that are too small to be real (likely artifact)
a = size(tmp1(tmp1>3),2);
b = size(tmp2(tmp2>3),2);


%adjustment based on calibration
count1 = 100*count1/s;
count2 = 135.5*a/(b);
end



function [BW,maskedRGBImage] = createMask(RGB)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 02-Aug-2022
%------------------------------------------------------


% Convert RGB image to chosen color space
I = rgb2hsv(RGB);

% Define thresholds for channel 1 based on histogram settings
channel1Min = 0.871;
channel1Max = 0.104;

% Define thresholds for channel 2 based on histogram settings
channel2Min = 0.213;
channel2Max = 1;

% Define thresholds for channel 3 based on histogram settings
channel3Min = 0.000;
channel3Max = 229.000;

% Create mask based on chosen histogram thresholds
sliderBW = ( (I(:,:,1) >= channel1Min) | (I(:,:,1) <= channel1Max) ) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

end
